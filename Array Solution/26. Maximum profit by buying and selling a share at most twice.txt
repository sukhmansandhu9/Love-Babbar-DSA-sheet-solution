int solve(int index,int buy,int prices[],int limit,vector<vector<vector<int>>> &dp,int N)
    {
        if(index == N) return 0;
        
        if(limit == 0) return 0;
        
        if( dp[index][buy][limit] != -1) return dp[index][buy][limit];
        
        int profit = 0;
        
        if(buy)
        {
            profit = max( (-prices[index] + solve(index+1,0,prices,limit,dp,N)), (0+solve(index+1,1,prices,limit,dp,N)) );
        }
        else
        {
            profit = max( (prices[index] + solve(index+1,1,prices,limit-1,dp,N)), (0+solve(index+1,0,prices,limit,dp,N)) );  
        }
        
        return dp[index][buy][limit] = profit;
    }
  
    int maxProfit(int K, int N, int A[]) {
        
        vector<vector<vector<int>>> dp(N,vector<vector<int>>(2,vector<int>(K+1,-1)));
        return solve(0,1,A,K,dp,N);
    }